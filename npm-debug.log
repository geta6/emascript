0 info it worked if it ends with ok
1 verbose cli [ 'node',
1 verbose cli   '/usr/local/opt/nvm/v0.10.26/bin/npm',
1 verbose cli   'publish',
1 verbose cli   '--force' ]
2 info using npm@1.4.4
3 info using node@v0.10.26
4 verbose node symlink /usr/local/opt/nvm/v0.10.26/bin/node
5 warn using --force I sure hope you know what you are doing.
6 verbose publish [ '.' ]
7 verbose cache add [ '.', null ]
8 verbose cache add name=undefined spec="." args=[".",null]
9 verbose parsed url { protocol: null,
9 verbose parsed url   slashes: null,
9 verbose parsed url   auth: null,
9 verbose parsed url   host: null,
9 verbose parsed url   port: null,
9 verbose parsed url   hostname: null,
9 verbose parsed url   hash: null,
9 verbose parsed url   search: null,
9 verbose parsed url   query: null,
9 verbose parsed url   pathname: '.',
9 verbose parsed url   path: '.',
9 verbose parsed url   href: '.' }
10 silly lockFile 3a52ce78- .
11 verbose lock . /Users/geta6/.npm/3a52ce78-.lock
12 verbose tar pack [ '/var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/tmp.tgz',
12 verbose tar pack   '.' ]
13 verbose tarball /var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/tmp.tgz
14 verbose folder .
15 info prepublish ema@0.0.3
16 silly lockFile 1f1177db-tar tar://.
17 verbose lock tar://. /Users/geta6/.npm/1f1177db-tar.lock
18 silly lockFile 070df49b-526384-0-071429229574278-tmp-tgz tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/tmp.tgz
19 verbose lock tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/tmp.tgz /Users/geta6/.npm/070df49b-526384-0-071429229574278-tmp-tgz.lock
20 silly lockFile 1f1177db-tar tar://.
21 silly lockFile 1f1177db-tar tar://.
22 silly lockFile 070df49b-526384-0-071429229574278-tmp-tgz tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/tmp.tgz
23 silly lockFile 070df49b-526384-0-071429229574278-tmp-tgz tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/tmp.tgz
24 verbose tar unpack /var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/tmp.tgz
25 silly lockFile d878f68e-526384-0-071429229574278-package tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/package
26 verbose lock tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/package /Users/geta6/.npm/d878f68e-526384-0-071429229574278-package.lock
27 silly lockFile 070df49b-526384-0-071429229574278-tmp-tgz tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/tmp.tgz
28 verbose lock tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/tmp.tgz /Users/geta6/.npm/070df49b-526384-0-071429229574278-tmp-tgz.lock
29 silly gunzTarPerm modes [ '755', '644' ]
30 silly gunzTarPerm extractEntry package.json
31 silly gunzTarPerm extractEntry .npmignore
32 silly gunzTarPerm extractEntry README.md
33 silly gunzTarPerm extractEntry Cakefile
34 silly gunzTarPerm extractEntry Emafile.example
35 silly gunzTarPerm extractEntry bin/ema
36 silly gunzTarPerm extractEntry lib/ema.js
37 silly gunzTarPerm extractEntry lib/helper.js
38 silly lockFile d878f68e-526384-0-071429229574278-package tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/package
39 silly lockFile d878f68e-526384-0-071429229574278-package tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/package
40 silly lockFile 070df49b-526384-0-071429229574278-tmp-tgz tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/tmp.tgz
41 silly lockFile 070df49b-526384-0-071429229574278-tmp-tgz tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/tmp.tgz
42 verbose tar pack [ '/Users/geta6/.npm/ema/0.0.3/package.tgz',
42 verbose tar pack   '/var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/package' ]
43 verbose tarball /Users/geta6/.npm/ema/0.0.3/package.tgz
44 verbose folder /var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/package
45 silly lockFile d878f68e-526384-0-071429229574278-package tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/package
46 verbose lock tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/package /Users/geta6/.npm/d878f68e-526384-0-071429229574278-package.lock
47 silly lockFile 2d0443ad--geta6-npm-ema-0-0-3-package-tgz tar:///Users/geta6/.npm/ema/0.0.3/package.tgz
48 verbose lock tar:///Users/geta6/.npm/ema/0.0.3/package.tgz /Users/geta6/.npm/2d0443ad--geta6-npm-ema-0-0-3-package-tgz.lock
49 silly lockFile d878f68e-526384-0-071429229574278-package tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/package
50 silly lockFile d878f68e-526384-0-071429229574278-package tar:///var/folders/z0/8xpdfnh96wj480c72lcn13vr0000gn/T/npm-61691-Ypf1mox2/1394533526384-0.071429229574278/package
51 silly lockFile 2d0443ad--geta6-npm-ema-0-0-3-package-tgz tar:///Users/geta6/.npm/ema/0.0.3/package.tgz
52 silly lockFile 2d0443ad--geta6-npm-ema-0-0-3-package-tgz tar:///Users/geta6/.npm/ema/0.0.3/package.tgz
53 silly lockFile c36cd9ee-sers-geta6-npm-ema-0-0-3-package /Users/geta6/.npm/ema/0.0.3/package
54 verbose lock /Users/geta6/.npm/ema/0.0.3/package /Users/geta6/.npm/c36cd9ee-sers-geta6-npm-ema-0-0-3-package.lock
55 silly lockFile c36cd9ee-sers-geta6-npm-ema-0-0-3-package /Users/geta6/.npm/ema/0.0.3/package
56 silly lockFile c36cd9ee-sers-geta6-npm-ema-0-0-3-package /Users/geta6/.npm/ema/0.0.3/package
57 verbose tar unpack /Users/geta6/.npm/ema/0.0.3/package.tgz
58 silly lockFile 6d7e1c18-sers-geta6-npm-ema-0-0-3-package tar:///Users/geta6/.npm/ema/0.0.3/package
59 verbose lock tar:///Users/geta6/.npm/ema/0.0.3/package /Users/geta6/.npm/6d7e1c18-sers-geta6-npm-ema-0-0-3-package.lock
60 silly lockFile 2d0443ad--geta6-npm-ema-0-0-3-package-tgz tar:///Users/geta6/.npm/ema/0.0.3/package.tgz
61 verbose lock tar:///Users/geta6/.npm/ema/0.0.3/package.tgz /Users/geta6/.npm/2d0443ad--geta6-npm-ema-0-0-3-package-tgz.lock
62 silly gunzTarPerm modes [ '755', '644' ]
63 silly gunzTarPerm extractEntry package.json
64 silly gunzTarPerm extractEntry .npmignore
65 silly gunzTarPerm extractEntry README.md
66 silly gunzTarPerm extractEntry Cakefile
67 silly gunzTarPerm extractEntry Emafile.example
68 silly gunzTarPerm extractEntry bin/ema
69 silly gunzTarPerm extractEntry lib/ema.js
70 silly gunzTarPerm extractEntry lib/helper.js
71 silly lockFile 6d7e1c18-sers-geta6-npm-ema-0-0-3-package tar:///Users/geta6/.npm/ema/0.0.3/package
72 silly lockFile 6d7e1c18-sers-geta6-npm-ema-0-0-3-package tar:///Users/geta6/.npm/ema/0.0.3/package
73 silly lockFile 2d0443ad--geta6-npm-ema-0-0-3-package-tgz tar:///Users/geta6/.npm/ema/0.0.3/package.tgz
74 silly lockFile 2d0443ad--geta6-npm-ema-0-0-3-package-tgz tar:///Users/geta6/.npm/ema/0.0.3/package.tgz
75 verbose chmod /Users/geta6/.npm/ema/0.0.3/package.tgz 644
76 verbose chown /Users/geta6/.npm/ema/0.0.3/package.tgz [ 501, 20 ]
77 silly lockFile 3a52ce78- .
78 silly lockFile 3a52ce78- .
79 silly publish { name: 'ema',
79 silly publish   version: '0.0.3',
79 silly publish   description: 'simple process manager',
79 silly publish   bin: { ema: 'bin/ema' },
79 silly publish   scripts: {},
79 silly publish   author: { name: 'geta6' },
79 silly publish   license: 'MIT',
79 silly publish   dependencies:
79 silly publish    { 'coffee-script': '^1.7.1',
79 silly publish      commander: '^2.1.0',
79 silly publish      lodash: '^2.4.1',
79 silly publish      json5: '^0.2.0',
79 silly publish      mkdirp: '^0.3.5',
79 silly publish      async: '^0.2.10' },
79 silly publish   devDependencies: { mocha: '*' },
79 silly publish   readme: '     _______ _______ _______\n    |    ___|   |   |   _   |\n    |    ___|       |       |\n    |_______|__|_|__|___|___|\n\n**ema** -- Simple process manager for node.js app.\n\n# install\n\n    npm i -g ema\n\n# synopsis\n\n    ema [-hVtqd] [-s signal] [-p dirname] [-c filename] [-g directives]\n\n# options\n\n    -h, --help                    output usage information\n    -V, --version                 output the version number\n    -t, --test                    test configuration and exit\n    -q, --quiet                   suppress non-error messages during configuration testing\n    -d, --daemon                  daemonize process\n    -s, --signal <signal>         send signal to a master process: stop, quit, reload\n    -p, --prefix <dirname>        set prefix path\n    -c, --config <filename>       set configuration json file\n    -g, --directives <directive>  set master directives out of configuration file\n\n### -h, help\n\n  Print help.\n\n### -V, version\n\n  Print the **ema** version.\n\n### -t, test\n\n  Do not run, just test the configuration file.\n\n  **ema** checks the configuration file syntax.\n\n### -q, --quiet\n\n  Supress non-error messages during configuration testing.\n\n### -d, --daemon\n\n  Respawn the process as a daemon.\n\n  The parent process will exit at the point of this call.\n\n### -s, --signal\n\n  Send a signal to the master process.\n\n  The arguments signal can be on of: **stop, quit, reload**.\n\n  The following table shows the corresponding system signals:\n\n  ARG    | SIGNAL\n  -------|---------\n  stop   | SIGTERM\n  quit   | SIGQUIT\n  reload | SIGHUP\n\n### -p, --prefix\n\n  Set the prefix path.\n\n  The default value is a directory `package.json` exists.\n\n### -c, --config\n\n  Use an alternative configuration file.\n\n### -g, --directives\n\n  Override or set global configuration directives.\n\n  JavaScript object format acceptable. (e.g. `-g "{pid: \'./tmp/em2.pid\'}"`)\n\n\n# signals\n\n  The master process of **ema** can handle the following signals:\n\n  SIGNAL           | operation\n  -----------------|--------------\n  SIGINT, SIGTERM  | Shut down quickly.\n  SIGQUIT          | Shut down gracefully.\n  SIGHUP           | Reload configuration, start the new worker process with a new configuration, and gracefully shut down old worker processes.\n\n\n# configuration\n\n  configuration file example.\n  **ema** supports [json5](https://github.com/aseemk/json5).\n\n```\n{                                       // global directive\n  name       : \'myapp\'\n  pid_path   : \'%h/.myapp.pid\',\n  access_log : \'log/access.%t.%n.log\',\n  error_log  : \'log/error.%t.%n.log\',\n  clustering : 2,\n  server: {                             // server directive\n    dev: {\n      script      : \'config/app.coffee\',\n      clustering  : \'inherit\',\n      unmatch_env : \'production\',\n      env: {\n        PORT: 3000\n      }\n    },\n    web: {\n      script      : \'config/app.coffee\',\n      clustering  : \'auto\',\n      unmatch_env : \'development\',\n      env: {\n        PORT: 3030\n      }\n    },\n    test: {\n      script      : \'tests/test.coffee\',\n      match_env   : \'test\'\n    }\n  }\n}\n```\n\nthis configuration file wakes following named processes:\n\n```\n$ ema -d\n$ ps ax | grep -v grep | grep myapp:\n10000 s002  S+     0:00.12 myapp:master\n10001 s002  S+     0:00.41 myapp:worker:dev.1\n10002 s002  S+     0:00.41 myapp:worker:dev.2\n$ ls -a ~ | grep .pid\n.myapp.pid\n```\n\nwith production (4 core cpu):\n\n```\n$ NODE_ENV=production ema -d\n$ ps ax | grep -v grep | grep myapp:\n10000 s002  S+     0:00.12 myapp:master\n10001 s002  S+     0:00.41 myapp:worker:web.1\n10002 s002  S+     0:00.41 myapp:worker:web.2\n10003 s002  S+     0:00.41 myapp:worker:web.3\n10004 s002  S+     0:00.41 myapp:worker:web.4\n```\n\n\n## configuration keys\n\n### common directive\n\nkey          | description                       | defaults\n-------------|-----------------------------------|-----------\n`access_log` | access log path.                  | `String \'%d/tmp/log/access.log\'`\n`error_log`  | error log path.                   | `String \'%d/tmp/log/error.log\'`\n`clustering` | num of clustering.                | ``Number `os.cpus().length` ``\n\n### global directive\n\nkey          | description                       | defaults\n-------------|-----------------------------------|----------\n`name`       | name for your application.        | `String ema`\n`pid_path`   | pid path.                         | `String \'%d/tmp/ema.pid\'`\n`timeout`    | processes disconnect timeout.     | `Number 2400`\n`server`     | server directives.                | `Object {}`\n\n### server directive\n\ndirective key name set to `process.title`.\n\nkey           | description                      | defaults\n--------------|----------------------------------|----------\n`script`      | main script name.                | `String null`\n`match_env`   | starts only it matched to env.   | `String null`\n`unmatch_env` | starts only it unmatched to env. | `String null`\n`env`         | exports to `process.env`.        | `Object {}`\n\n\n## conversion specifier\n\nspecifier | description         | directive      | e.g.\n----------|---------------------|----------------|------\n`%h`      | user home directory | global, server | `/home/user`\n`%d`      | project root path   | global, server | `/home/user/project`\n`%p`      | port number         | global, server | `3000`\n`%e`      | node env            | global, server | `development`\n`%t`      | process title label | server         | `web`\n`%c`      | clustered order     | server         | `/[0-3]/`\n`%C`      | number of clusters  | server         | `4`\n\n# files\n\n  `${prefix}/tmp/ema.pid`\n\n  Contains the process ID of **ema**. The contents of this file are not sensitive, so it can be world-readable.\n\n  `${prefix}/Emafile{,.json}`\n\n  The main configuration file. To set alternative, use `[-c filename]` option.\n\n  `${prefix}/tmp/log/access.log`\n\n  Log file. To set alternative, check configuration section.\n\n  `${prefix}/tmp/log/error.log`\n\n  Error log file. To set alternative, check configuration section.\n\n\n# exit status.\n\n  Exit status is `0` on success, or `1` if the command fails.\n\n\n# examples\n\n  Test configuration file `$PROJECT/config/process.json` with global directives for PID:\n\n    ema -t -c ./config/process.json -g "{ pid_path: \'/tmp/.ema.pid\' }"\n\n',
79 silly publish   readmeFilename: 'README.md',
79 silly publish   _id: 'ema@0.0.3',
79 silly publish   dist: { shasum: 'ddec2615d2c536f6f761f4f4f75e2876908445ef' },
79 silly publish   _from: '.' }
80 verbose url raw ema
81 verbose url resolving [ 'https://registry.npmjs.org/', './ema' ]
82 verbose url resolved https://registry.npmjs.org/ema
83 info trying registry request attempt 1 at 19:25:26
84 http PUT https://registry.npmjs.org/ema
85 http 403 https://registry.npmjs.org/ema
86 error publish Failed PUT 403
87 error Error: forbidden cannot modify pre-existing version: 0.0.3
87 error old={"name":"ema","version":"0.0.3","description":"simple process manager","bin":{"ema":"bin/ema"},"scripts":{},"author":{"name":"geta6"},"license":"MIT","dependencies":{"coffee-script":"^1.7.1","commander":"^2.1.0","lodash":"^2.4.1","json5":"^0.2.0","mkdirp":"^0.3.5","async":"^0.2.10"},"devDependencies":{"mocha":"*"},"_id":"ema@0.0.3","dist":{"shasum":"68685f7bae1d306cddfcfb355b2a26f3742072f3","tarball":"http://registry.npmjs.org/ema/-/ema-0.0.3.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"geta6","email":"getakura@gmail.com"},"maintainers":[{"name":"geta6","email":"getakura@gmail.com"}]}
87 error new={"name":"ema","version":"0.0.3","description":"simple process manager","bin":{"ema":"bin/ema"},"scripts":{},"author":{"name":"geta6"},"license":"MIT","dependencies":{"coffee-script":"^1.7.1","commander":"^2.1.0","lodash":"^2.4.1","json5":"^0.2.0","mkdirp":"^0.3.5","async":"^0.2.10"},"devDependencies":{"mocha":"*"},"readme":"     _______ _______ _______\u000a    |    ___|   |   |   _   |\u000a    |    ___|       |       |\u000a    |_______|__|_|__|___|___|\u000a\u000a**ema** -- Simple process manager for node.js app.\u000a\u000a# install\u000a\u000a    npm i -g ema\u000a\u000a# synopsis\u000a\u000a    ema [-hVtqd] [-s signal] [-p dirname] [-c filename] [-g directives]\u000a\u000a# options\u000a\u000a    -h, --help                    output usage information\u000a    -V, --version                 output the version number\u000a    -t, --test                    test configuration and exit\u000a    -q, --quiet                   suppress non-error messages during configuration testing\u000a    -d, --daemon                  daemonize process\u000a    -s, --signal <signal>         send signal to a master process: stop, quit, reload\u000a    -p, --prefix <dirname>        set prefix path\u000a    -c, --config <filename>       set configuration json file\u000a    -g, --directives <directive>  set master directives out of configuration file\u000a\u000a### -h, help\u000a\u000a  Print help.\u000a\u000a### -V, version\u000a\u000a  Print the **ema** version.\u000a\u000a### -t, test\u000a\u000a  Do not run, just test the configuration file.\u000a\u000a  **ema** checks the configuration file syntax.\u000a\u000a### -q, --quiet\u000a\u000a  Supress non-error messages during configuration testing.\u000a\u000a### -d, --daemon\u000a\u000a  Respawn the process as a daemon.\u000a\u000a  The parent process will exit at the point of this call.\u000a\u000a### -s, --signal\u000a\u000a  Send a signal to the master process.\u000a\u000a  The arguments signal can be on of: **stop, quit, reload**.\u000a\u000a  The following table shows the corresponding system signals:\u000a\u000a  ARG    | SIGNAL\u000a  -------|---------\u000a  stop   | SIGTERM\u000a  quit   | SIGQUIT\u000a  reload | SIGHUP\u000a\u000a### -p, --prefix\u000a\u000a  Set the prefix path.\u000a\u000a  The default value is a directory `package.json` exists.\u000a\u000a### -c, --config\u000a\u000a  Use an alternative configuration file.\u000a\u000a### -g, --directives\u000a\u000a  Override or set global configuration directives.\u000a\u000a  JavaScript object format acceptable. (e.g. `-g \"{pid: './tmp/em2.pid'}\"`)\u000a\u000a\u000a# signals\u000a\u000a  The master process of **ema** can handle the following signals:\u000a\u000a  SIGNAL           | operation\u000a  -----------------|--------------\u000a  SIGINT, SIGTERM  | Shut down quickly.\u000a  SIGQUIT          | Shut down gracefully.\u000a  SIGHUP           | Reload configuration, start the new worker process with a new configuration, and gracefully shut down old worker processes.\u000a\u000a\u000a# configuration\u000a\u000a  configuration file example.\u000a  **ema** supports [json5](https://github.com/aseemk/json5).\u000a\u000a```\u000a{                                       // global directive\u000a  name       : 'myapp'\u000a  pid_path   : '%h/.myapp.pid',\u000a  access_log : 'log/access.%t.%n.log',\u000a  error_log  : 'log/error.%t.%n.log',\u000a  clustering : 2,\u000a  server: {                             // server directive\u000a    dev: {\u000a      script      : 'config/app.coffee',\u000a      clustering  : 'inherit',\u000a      unmatch_env : 'production',\u000a      env: {\u000a        PORT: 3000\u000a      }\u000a    },\u000a    web: {\u000a      script      : 'config/app.coffee',\u000a      clustering  : 'auto',\u000a      unmatch_env : 'development',\u000a      env: {\u000a        PORT: 3030\u000a      }\u000a    },\u000a    test: {\u000a      script      : 'tests/test.coffee',\u000a      match_env   : 'test'\u000a    }\u000a  }\u000a}\u000a```\u000a\u000athis configuration file wakes following named processes:\u000a\u000a```\u000a$ ema -d\u000a$ ps ax | grep -v grep | grep myapp:\u000a10000 s002  S+     0:00.12 myapp:master\u000a10001 s002  S+     0:00.41 myapp:worker:dev.1\u000a10002 s002  S+     0:00.41 myapp:worker:dev.2\u000a$ ls -a ~ | grep .pid\u000a.myapp.pid\u000a```\u000a\u000awith production (4 core cpu):\u000a\u000a```\u000a$ NODE_ENV=production ema -d\u000a$ ps ax | grep -v grep | grep myapp:\u000a10000 s002  S+     0:00.12 myapp:master\u000a10001 s002  S+     0:00.41 myapp:worker:web.1\u000a10002 s002  S+     0:00.41 myapp:worker:web.2\u000a10003 s002  S+     0:00.41 myapp:worker:web.3\u000a10004 s002  S+     0:00.41 myapp:worker:web.4\u000a```\u000a\u000a\u000a## configuration keys\u000a\u000a### common directive\u000a\u000akey          | description                       | defaults\u000a-------------|-----------------------------------|-----------\u000a`access_log` | access log path.                  | `String '%d/tmp/log/access.log'`\u000a`error_log`  | error log path.                   | `String '%d/tmp/log/error.log'`\u000a`clustering` | num of clustering.                | ``Number `os.cpus().length` ``\u000a\u000a### global directive\u000a\u000akey          | description                       | defaults\u000a-------------|-----------------------------------|----------\u000a`name`       | name for your application.        | `String ema`\u000a`pid_path`   | pid path.                         | `String '%d/tmp/ema.pid'`\u000a`timeout`    | processes disconnect timeout.     | `Number 2400`\u000a`server`     | server directives.                | `Object {}`\u000a\u000a### server directive\u000a\u000adirective key name set to `process.title`.\u000a\u000akey           | description                      | defaults\u000a--------------|----------------------------------|----------\u000a`script`      | main script name.                | `String null`\u000a`match_env`   | starts only it matched to env.   | `String null`\u000a`unmatch_env` | starts only it unmatched to env. | `String null`\u000a`env`         | exports to `process.env`.        | `Object {}`\u000a\u000a\u000a## conversion specifier\u000a\u000aspecifier | description         | directive      | e.g.\u000a----------|---------------------|----------------|------\u000a`%h`      | user home directory | global, server | `/home/user`\u000a`%d`      | project root path   | global, server | `/home/user/project`\u000a`%p`      | port number         | global, server | `3000`\u000a`%e`      | node env            | global, server | `development`\u000a`%t`      | process title label | server         | `web`\u000a`%c`      | clustered order     | server         | `/[0-3]/`\u000a`%C`      | number of clusters  | server         | `4`\u000a\u000a# files\u000a\u000a  `${prefix}/tmp/ema.pid`\u000a\u000a  Contains the process ID of **ema**. The contents of this file are not sensitive, so it can be world-readable.\u000a\u000a  `${prefix}/Emafile{,.json}`\u000a\u000a  The main configuration file. To set alternative, use `[-c filename]` option.\u000a\u000a  `${prefix}/tmp/log/access.log`\u000a\u000a  Log file. To set alternative, check configuration section.\u000a\u000a  `${prefix}/tmp/log/error.log`\u000a\u000a  Error log file. To set alternative, check configuration section.\u000a\u000a\u000a# exit status.\u000a\u000a  Exit status is `0` on success, or `1` if the command fails.\u000a\u000a\u000a# examples\u000a\u000a  Test configuration file `$PROJECT/config/process.json` with global directives for PID:\u000a\u000a    ema -t -c ./config/process.json -g \"{ pid_path: '/tmp/.ema.pid' }\"\u000a\u000a","readmeFilename":"README.md","_id":"ema@0.0.3","dist":{"shasum":"ddec2615d2c536f6f761f4f4f75e2876908445ef","tarball":"http://registry.npmjs.org/ema/-/ema-0.0.3.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"geta6","email":"getakura@gmail.com"},"maintainers":[{"name":"geta6","email":"getakura@gmail.com"}]}: ema
87 error     at RegClient.<anonymous> (/usr/local/Cellar/nvm/0.2.0/v0.10.26/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:237:14)
87 error     at Request.self.callback (/usr/local/Cellar/nvm/0.2.0/v0.10.26/lib/node_modules/npm/node_modules/request/request.js:123:22)
87 error     at Request.EventEmitter.emit (events.js:98:17)
87 error     at Request.<anonymous> (/usr/local/Cellar/nvm/0.2.0/v0.10.26/lib/node_modules/npm/node_modules/request/request.js:893:14)
87 error     at Request.EventEmitter.emit (events.js:117:20)
87 error     at IncomingMessage.<anonymous> (/usr/local/Cellar/nvm/0.2.0/v0.10.26/lib/node_modules/npm/node_modules/request/request.js:844:12)
87 error     at IncomingMessage.EventEmitter.emit (events.js:117:20)
87 error     at _stream_readable.js:920:16
87 error     at process._tickCallback (node.js:415:13)
88 error If you need help, you may report this *entire* log,
88 error including the npm and node versions, at:
88 error     <http://github.com/npm/npm/issues>
89 error System Darwin 13.1.0
90 error command "node" "/usr/local/opt/nvm/v0.10.26/bin/npm" "publish" "--force"
91 error cwd /Users/geta6/Documents/Developer/ema
92 error node -v v0.10.26
93 error npm -v 1.4.4
94 verbose exit [ 1, true ]
